// Code generated by protoc-gen-go. DO NOT EDIT.
// source: movie-service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Movie
type Movie struct {
	// Title of the Movie
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Tags for the movie
	Tags []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	// Released year of the movie.
	Year int64 `protobuf:"varint,3,opt,name=year,proto3" json:"year,omitempty"`
	// Actors acted in movie.
	Actors []*Person `protobuf:"bytes,4,rep,name=actors,proto3" json:"actors,omitempty"`
	// Director of the movie.
	Directors            []*Person `protobuf:"bytes,5,rep,name=directors,proto3" json:"directors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Movie) Reset()         { *m = Movie{} }
func (m *Movie) String() string { return proto.CompactTextString(m) }
func (*Movie) ProtoMessage()    {}
func (*Movie) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eea73d65d8c40d8, []int{0}
}

func (m *Movie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Movie.Unmarshal(m, b)
}
func (m *Movie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Movie.Marshal(b, m, deterministic)
}
func (m *Movie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Movie.Merge(m, src)
}
func (m *Movie) XXX_Size() int {
	return xxx_messageInfo_Movie.Size(m)
}
func (m *Movie) XXX_DiscardUnknown() {
	xxx_messageInfo_Movie.DiscardUnknown(m)
}

var xxx_messageInfo_Movie proto.InternalMessageInfo

func (m *Movie) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Movie) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Movie) GetYear() int64 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Movie) GetActors() []*Person {
	if m != nil {
		return m.Actors
	}
	return nil
}

func (m *Movie) GetDirectors() []*Person {
	if m != nil {
		return m.Directors
	}
	return nil
}

// Person who can be Actor, Director etc.
// This can be moved to  person folder and have a seperate service dealing actors, directors and crew.
type Person struct {
	// name of the person
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eea73d65d8c40d8, []int{1}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request data to create new movie
type CreateMovieRequest struct {
	// Movie entity to add
	Movie                *Movie   `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMovieRequest) Reset()         { *m = CreateMovieRequest{} }
func (m *CreateMovieRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMovieRequest) ProtoMessage()    {}
func (*CreateMovieRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eea73d65d8c40d8, []int{2}
}

func (m *CreateMovieRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMovieRequest.Unmarshal(m, b)
}
func (m *CreateMovieRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMovieRequest.Marshal(b, m, deterministic)
}
func (m *CreateMovieRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMovieRequest.Merge(m, src)
}
func (m *CreateMovieRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMovieRequest.Size(m)
}
func (m *CreateMovieRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMovieRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMovieRequest proto.InternalMessageInfo

func (m *CreateMovieRequest) GetMovie() *Movie {
	if m != nil {
		return m.Movie
	}
	return nil
}

// Contains data of created Movie.
type CreateMovieResponse struct {
	// created Movie
	Movie                *Movie   `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMovieResponse) Reset()         { *m = CreateMovieResponse{} }
func (m *CreateMovieResponse) String() string { return proto.CompactTextString(m) }
func (*CreateMovieResponse) ProtoMessage()    {}
func (*CreateMovieResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eea73d65d8c40d8, []int{3}
}

func (m *CreateMovieResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMovieResponse.Unmarshal(m, b)
}
func (m *CreateMovieResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMovieResponse.Marshal(b, m, deterministic)
}
func (m *CreateMovieResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMovieResponse.Merge(m, src)
}
func (m *CreateMovieResponse) XXX_Size() int {
	return xxx_messageInfo_CreateMovieResponse.Size(m)
}
func (m *CreateMovieResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMovieResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMovieResponse proto.InternalMessageInfo

func (m *CreateMovieResponse) GetMovie() *Movie {
	if m != nil {
		return m.Movie
	}
	return nil
}

// Request data to read Movie.
type GetMovieRequest struct {
	// Get movie by title.
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMovieRequest) Reset()         { *m = GetMovieRequest{} }
func (m *GetMovieRequest) String() string { return proto.CompactTextString(m) }
func (*GetMovieRequest) ProtoMessage()    {}
func (*GetMovieRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eea73d65d8c40d8, []int{4}
}

func (m *GetMovieRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMovieRequest.Unmarshal(m, b)
}
func (m *GetMovieRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMovieRequest.Marshal(b, m, deterministic)
}
func (m *GetMovieRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMovieRequest.Merge(m, src)
}
func (m *GetMovieRequest) XXX_Size() int {
	return xxx_messageInfo_GetMovieRequest.Size(m)
}
func (m *GetMovieRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMovieRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMovieRequest proto.InternalMessageInfo

func (m *GetMovieRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// Contains Movie data specified in by title request
type GetMovieResponse struct {
	// Movie entity read by title
	Movie                *Movie   `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMovieResponse) Reset()         { *m = GetMovieResponse{} }
func (m *GetMovieResponse) String() string { return proto.CompactTextString(m) }
func (*GetMovieResponse) ProtoMessage()    {}
func (*GetMovieResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eea73d65d8c40d8, []int{5}
}

func (m *GetMovieResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMovieResponse.Unmarshal(m, b)
}
func (m *GetMovieResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMovieResponse.Marshal(b, m, deterministic)
}
func (m *GetMovieResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMovieResponse.Merge(m, src)
}
func (m *GetMovieResponse) XXX_Size() int {
	return xxx_messageInfo_GetMovieResponse.Size(m)
}
func (m *GetMovieResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMovieResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMovieResponse proto.InternalMessageInfo

func (m *GetMovieResponse) GetMovie() *Movie {
	if m != nil {
		return m.Movie
	}
	return nil
}

// Request data to read Movie.
type AddTagsRequest struct {
	// Title of the movie. In actual cases it would be id of the movie.
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Tags to update in a movie.
	Tags                 []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTagsRequest) Reset()         { *m = AddTagsRequest{} }
func (m *AddTagsRequest) String() string { return proto.CompactTextString(m) }
func (*AddTagsRequest) ProtoMessage()    {}
func (*AddTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eea73d65d8c40d8, []int{6}
}

func (m *AddTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTagsRequest.Unmarshal(m, b)
}
func (m *AddTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTagsRequest.Marshal(b, m, deterministic)
}
func (m *AddTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTagsRequest.Merge(m, src)
}
func (m *AddTagsRequest) XXX_Size() int {
	return xxx_messageInfo_AddTagsRequest.Size(m)
}
func (m *AddTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTagsRequest proto.InternalMessageInfo

func (m *AddTagsRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddTagsRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

// Contains Movie data specified in by ID request
type AddTagsResponse struct {
	// Updated movie with tags.
	Movie                *Movie   `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTagsResponse) Reset()         { *m = AddTagsResponse{} }
func (m *AddTagsResponse) String() string { return proto.CompactTextString(m) }
func (*AddTagsResponse) ProtoMessage()    {}
func (*AddTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eea73d65d8c40d8, []int{7}
}

func (m *AddTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTagsResponse.Unmarshal(m, b)
}
func (m *AddTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTagsResponse.Marshal(b, m, deterministic)
}
func (m *AddTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTagsResponse.Merge(m, src)
}
func (m *AddTagsResponse) XXX_Size() int {
	return xxx_messageInfo_AddTagsResponse.Size(m)
}
func (m *AddTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddTagsResponse proto.InternalMessageInfo

func (m *AddTagsResponse) GetMovie() *Movie {
	if m != nil {
		return m.Movie
	}
	return nil
}

// Request data to read all Movies
type ListAllMoviesRequest struct {
	Filter               string   `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAllMoviesRequest) Reset()         { *m = ListAllMoviesRequest{} }
func (m *ListAllMoviesRequest) String() string { return proto.CompactTextString(m) }
func (*ListAllMoviesRequest) ProtoMessage()    {}
func (*ListAllMoviesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eea73d65d8c40d8, []int{8}
}

func (m *ListAllMoviesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAllMoviesRequest.Unmarshal(m, b)
}
func (m *ListAllMoviesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAllMoviesRequest.Marshal(b, m, deterministic)
}
func (m *ListAllMoviesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAllMoviesRequest.Merge(m, src)
}
func (m *ListAllMoviesRequest) XXX_Size() int {
	return xxx_messageInfo_ListAllMoviesRequest.Size(m)
}
func (m *ListAllMoviesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAllMoviesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAllMoviesRequest proto.InternalMessageInfo

func (m *ListAllMoviesRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

// Contains list of all Movies
type ListAllMoviesResponse struct {
	// List of all Movie Movies
	Movies               []*Movie `protobuf:"bytes,2,rep,name=movies,proto3" json:"movies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAllMoviesResponse) Reset()         { *m = ListAllMoviesResponse{} }
func (m *ListAllMoviesResponse) String() string { return proto.CompactTextString(m) }
func (*ListAllMoviesResponse) ProtoMessage()    {}
func (*ListAllMoviesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6eea73d65d8c40d8, []int{9}
}

func (m *ListAllMoviesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAllMoviesResponse.Unmarshal(m, b)
}
func (m *ListAllMoviesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAllMoviesResponse.Marshal(b, m, deterministic)
}
func (m *ListAllMoviesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAllMoviesResponse.Merge(m, src)
}
func (m *ListAllMoviesResponse) XXX_Size() int {
	return xxx_messageInfo_ListAllMoviesResponse.Size(m)
}
func (m *ListAllMoviesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAllMoviesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAllMoviesResponse proto.InternalMessageInfo

func (m *ListAllMoviesResponse) GetMovies() []*Movie {
	if m != nil {
		return m.Movies
	}
	return nil
}

func init() {
	proto.RegisterType((*Movie)(nil), "v1.Movie")
	proto.RegisterType((*Person)(nil), "v1.Person")
	proto.RegisterType((*CreateMovieRequest)(nil), "v1.CreateMovieRequest")
	proto.RegisterType((*CreateMovieResponse)(nil), "v1.CreateMovieResponse")
	proto.RegisterType((*GetMovieRequest)(nil), "v1.GetMovieRequest")
	proto.RegisterType((*GetMovieResponse)(nil), "v1.GetMovieResponse")
	proto.RegisterType((*AddTagsRequest)(nil), "v1.AddTagsRequest")
	proto.RegisterType((*AddTagsResponse)(nil), "v1.AddTagsResponse")
	proto.RegisterType((*ListAllMoviesRequest)(nil), "v1.ListAllMoviesRequest")
	proto.RegisterType((*ListAllMoviesResponse)(nil), "v1.ListAllMoviesResponse")
}

func init() { proto.RegisterFile("movie-service.proto", fileDescriptor_6eea73d65d8c40d8) }

var fileDescriptor_6eea73d65d8c40d8 = []byte{
	// 589 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x95, 0xf3, 0x70, 0x95, 0x5b, 0xfa, 0x60, 0x92, 0x96, 0xd4, 0xaa, 0x84, 0xb1, 0x84, 0x88,
	0x22, 0x6a, 0x37, 0x69, 0x79, 0x28, 0xdd, 0x50, 0x58, 0xb0, 0x69, 0x05, 0x32, 0xf4, 0x03, 0x06,
	0xfb, 0xe2, 0x0e, 0x72, 0x66, 0xcc, 0xcc, 0xd4, 0x05, 0x21, 0x36, 0x7c, 0x02, 0xdd, 0xb1, 0x63,
	0xc1, 0x17, 0xf5, 0x17, 0xf8, 0x10, 0xe4, 0xb1, 0x69, 0xe4, 0x26, 0x82, 0xae, 0x3c, 0x3e, 0xf7,
	0xdc, 0x73, 0xae, 0xe6, 0x8c, 0x2e, 0x74, 0xa7, 0x22, 0x67, 0xb8, 0xa3, 0x50, 0xe6, 0x2c, 0x42,
	0x3f, 0x93, 0x42, 0x0b, 0xd2, 0xc8, 0x47, 0xce, 0x76, 0x22, 0x44, 0x92, 0x62, 0x40, 0x33, 0x16,
	0x50, 0xce, 0x85, 0xa6, 0x9a, 0x09, 0xae, 0x4a, 0x86, 0xf3, 0xd0, 0x7c, 0xa2, 0x9d, 0x04, 0xf9,
	0x8e, 0x3a, 0xa7, 0x49, 0x82, 0x32, 0x10, 0x99, 0x61, 0xcc, 0xb3, 0xbd, 0x0b, 0x0b, 0xda, 0xc7,
	0x85, 0x0f, 0xe9, 0x41, 0x5b, 0x33, 0x9d, 0x62, 0xdf, 0x72, 0xad, 0x41, 0x27, 0x2c, 0x7f, 0x08,
	0x81, 0x96, 0xa6, 0x89, 0xea, 0x37, 0xdc, 0xe6, 0xa0, 0x13, 0x9a, 0x73, 0x81, 0x7d, 0x46, 0x2a,
	0xfb, 0x4d, 0xd7, 0x1a, 0x34, 0x43, 0x73, 0x26, 0x1e, 0xd8, 0x34, 0xd2, 0x42, 0xaa, 0x7e, 0xcb,
	0x6d, 0x0e, 0x96, 0xc7, 0xe0, 0xe7, 0x23, 0xff, 0x35, 0x4a, 0x25, 0x78, 0x58, 0x55, 0xc8, 0x00,
	0x3a, 0x31, 0x93, 0x58, 0xd2, 0xda, 0x73, 0xb4, 0x59, 0xd1, 0xdb, 0x06, 0xbb, 0x04, 0x0b, 0x2f,
	0x4e, 0xa7, 0x7f, 0x87, 0x32, 0x67, 0xef, 0x11, 0x90, 0x17, 0x12, 0xa9, 0x46, 0x33, 0x78, 0x88,
	0x1f, 0xcf, 0x50, 0x69, 0x72, 0x17, 0xda, 0xe6, 0xc2, 0x0c, 0x75, 0x79, 0xdc, 0x29, 0x94, 0x4b,
	0x42, 0x89, 0x7b, 0x8f, 0xa1, 0x5b, 0x6b, 0x53, 0x99, 0xe0, 0x0a, 0xff, 0xdf, 0xf7, 0x00, 0xd6,
	0x5e, 0xa2, 0xae, 0x79, 0x2d, 0xbc, 0x2b, 0x6f, 0x0f, 0xd6, 0x67, 0xc4, 0x9b, 0xaa, 0x4f, 0x60,
	0xf5, 0x30, 0x8e, 0xdf, 0xd2, 0x44, 0xfd, 0x53, 0x7c, 0x51, 0x10, 0xde, 0x18, 0xd6, 0xae, 0x7a,
	0x6f, 0xea, 0xe7, 0x43, 0xef, 0x88, 0x29, 0x7d, 0x98, 0xa6, 0x06, 0xbe, 0x72, 0xdd, 0x04, 0xfb,
	0x3d, 0x4b, 0x35, 0xca, 0xca, 0xb6, 0xfa, 0xf3, 0x26, 0xb0, 0x71, 0x8d, 0x5f, 0x39, 0xdd, 0x03,
	0xdb, 0x28, 0x96, 0x23, 0xd5, 0xac, 0xaa, 0xc2, 0xf8, 0xb2, 0x01, 0xb7, 0x0c, 0xf2, 0xa6, 0x7c,
	0xc3, 0xe4, 0x04, 0x96, 0x2a, 0x31, 0xd2, 0x2f, 0xe8, 0x8b, 0x26, 0x71, 0xb6, 0x16, 0x54, 0x4a,
	0x4f, 0x6f, 0xe3, 0xdb, 0xe5, 0xef, 0x8b, 0xc6, 0x1a, 0x59, 0x09, 0xf2, 0x51, 0x60, 0x4c, 0x02,
	0x9a, 0xa6, 0xe4, 0x15, 0xd8, 0x65, 0xb2, 0x64, 0xb3, 0xe8, 0x9d, 0x7f, 0x1c, 0xce, 0x9d, 0x39,
	0xbc, 0x52, 0xec, 0x19, 0xc5, 0x55, 0xaf, 0x73, 0xa5, 0x38, 0xb1, 0x86, 0xe4, 0x08, 0x5a, 0x21,
	0xd2, 0x98, 0x74, 0x8b, 0xb6, 0x6b, 0xe1, 0x3b, 0xbd, 0x3a, 0x58, 0x09, 0x6d, 0x19, 0xa1, 0x2e,
	0xb9, 0x3d, 0x1b, 0xed, 0x8b, 0x49, 0xee, 0x2b, 0x39, 0x86, 0xa5, 0x2a, 0x26, 0x42, 0x8a, 0xde,
	0x7a, 0xde, 0x4e, 0xb7, 0x86, 0xd5, 0xe5, 0x9c, 0xd5, 0x99, 0x5c, 0x11, 0xf9, 0xc4, 0x1a, 0x3e,
	0xff, 0x65, 0x7d, 0x3f, 0xfc, 0x69, 0x91, 0x03, 0x58, 0x31, 0x13, 0xb8, 0xd5, 0x82, 0xf0, 0xee,
	0x57, 0xc0, 0x09, 0x67, 0x39, 0x4a, 0x85, 0x4e, 0x8f, 0x53, 0x89, 0xea, 0xd4, 0x7f, 0xaa, 0x9f,
	0x3c, 0x4b, 0xa6, 0x94, 0xa5, 0x7e, 0x24, 0xa6, 0xe3, 0xe6, 0xc8, 0xdf, 0x1d, 0x5a, 0xd6, 0x78,
	0x9d, 0x66, 0x59, 0xca, 0x22, 0xb3, 0x0d, 0x82, 0x0f, 0x4a, 0xf0, 0xc9, 0x1c, 0x12, 0x1e, 0x40,
	0x73, 0x7f, 0x77, 0x9f, 0xec, 0xc3, 0x30, 0x44, 0x7d, 0x26, 0x39, 0xc6, 0xee, 0xf9, 0x29, 0x72,
	0x57, 0x9f, 0xa2, 0x2b, 0x51, 0x89, 0x33, 0x19, 0xa1, 0x1b, 0x0b, 0x54, 0x2e, 0x17, 0xda, 0xc5,
	0x4f, 0x4c, 0x69, 0x9f, 0xd8, 0xd0, 0xfa, 0xd1, 0xb0, 0x96, 0xde, 0xd9, 0x66, 0xc3, 0xec, 0xfd,
	0x09, 0x00, 0x00, 0xff, 0xff, 0x3d, 0x13, 0xb9, 0x12, 0xc8, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MovieServiceClient is the client API for MovieService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MovieServiceClient interface {
	// Read all Movie Movies
	ListAll(ctx context.Context, in *ListAllMoviesRequest, opts ...grpc.CallOption) (*ListAllMoviesResponse, error)
	// Create new Movie Movie
	Create(ctx context.Context, in *CreateMovieRequest, opts ...grpc.CallOption) (*CreateMovieResponse, error)
	// Read Movie Movie
	Read(ctx context.Context, in *GetMovieRequest, opts ...grpc.CallOption) (*GetMovieResponse, error)
	// Update tags on a movie.
	AddTags(ctx context.Context, in *AddTagsRequest, opts ...grpc.CallOption) (*AddTagsResponse, error)
}

type movieServiceClient struct {
	cc *grpc.ClientConn
}

func NewMovieServiceClient(cc *grpc.ClientConn) MovieServiceClient {
	return &movieServiceClient{cc}
}

func (c *movieServiceClient) ListAll(ctx context.Context, in *ListAllMoviesRequest, opts ...grpc.CallOption) (*ListAllMoviesResponse, error) {
	out := new(ListAllMoviesResponse)
	err := c.cc.Invoke(ctx, "/v1.MovieService/ListAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *movieServiceClient) Create(ctx context.Context, in *CreateMovieRequest, opts ...grpc.CallOption) (*CreateMovieResponse, error) {
	out := new(CreateMovieResponse)
	err := c.cc.Invoke(ctx, "/v1.MovieService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *movieServiceClient) Read(ctx context.Context, in *GetMovieRequest, opts ...grpc.CallOption) (*GetMovieResponse, error) {
	out := new(GetMovieResponse)
	err := c.cc.Invoke(ctx, "/v1.MovieService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *movieServiceClient) AddTags(ctx context.Context, in *AddTagsRequest, opts ...grpc.CallOption) (*AddTagsResponse, error) {
	out := new(AddTagsResponse)
	err := c.cc.Invoke(ctx, "/v1.MovieService/AddTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MovieServiceServer is the server API for MovieService service.
type MovieServiceServer interface {
	// Read all Movie Movies
	ListAll(context.Context, *ListAllMoviesRequest) (*ListAllMoviesResponse, error)
	// Create new Movie Movie
	Create(context.Context, *CreateMovieRequest) (*CreateMovieResponse, error)
	// Read Movie Movie
	Read(context.Context, *GetMovieRequest) (*GetMovieResponse, error)
	// Update tags on a movie.
	AddTags(context.Context, *AddTagsRequest) (*AddTagsResponse, error)
}

// UnimplementedMovieServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMovieServiceServer struct {
}

func (*UnimplementedMovieServiceServer) ListAll(ctx context.Context, req *ListAllMoviesRequest) (*ListAllMoviesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAll not implemented")
}
func (*UnimplementedMovieServiceServer) Create(ctx context.Context, req *CreateMovieRequest) (*CreateMovieResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedMovieServiceServer) Read(ctx context.Context, req *GetMovieRequest) (*GetMovieResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedMovieServiceServer) AddTags(ctx context.Context, req *AddTagsRequest) (*AddTagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTags not implemented")
}

func RegisterMovieServiceServer(s *grpc.Server, srv MovieServiceServer) {
	s.RegisterService(&_MovieService_serviceDesc, srv)
}

func _MovieService_ListAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAllMoviesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieServiceServer).ListAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MovieService/ListAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieServiceServer).ListAll(ctx, req.(*ListAllMoviesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MovieService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMovieRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MovieService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieServiceServer).Create(ctx, req.(*CreateMovieRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MovieService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMovieRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MovieService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieServiceServer).Read(ctx, req.(*GetMovieRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MovieService_AddTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieServiceServer).AddTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MovieService/AddTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieServiceServer).AddTags(ctx, req.(*AddTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MovieService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.MovieService",
	HandlerType: (*MovieServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAll",
			Handler:    _MovieService_ListAll_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _MovieService_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _MovieService_Read_Handler,
		},
		{
			MethodName: "AddTags",
			Handler:    _MovieService_AddTags_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "movie-service.proto",
}
