// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import mock "github.com/stretchr/testify/mock"
import v1 "movieuniverse/pkg/movie/api/proto/v1"

// MovieServiceServer is an autogenerated mock type for the MovieServiceServer type
type MovieServiceServer struct {
	mock.Mock
}

// AddTags provides a mock function with given fields: _a0, _a1
func (_m *MovieServiceServer) AddTags(_a0 context.Context, _a1 *v1.AddTagsRequest) (*v1.AddTagsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *v1.AddTagsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *v1.AddTagsRequest) *v1.AddTagsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1.AddTagsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *v1.AddTagsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Create provides a mock function with given fields: _a0, _a1
func (_m *MovieServiceServer) Create(_a0 context.Context, _a1 *v1.CreateMovieRequest) (*v1.CreateMovieResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *v1.CreateMovieResponse
	if rf, ok := ret.Get(0).(func(context.Context, *v1.CreateMovieRequest) *v1.CreateMovieResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1.CreateMovieResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *v1.CreateMovieRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListAll provides a mock function with given fields: _a0, _a1
func (_m *MovieServiceServer) ListAll(_a0 context.Context, _a1 *v1.ListAllMoviesRequest) (*v1.ListAllMoviesResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *v1.ListAllMoviesResponse
	if rf, ok := ret.Get(0).(func(context.Context, *v1.ListAllMoviesRequest) *v1.ListAllMoviesResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1.ListAllMoviesResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *v1.ListAllMoviesRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Read provides a mock function with given fields: _a0, _a1
func (_m *MovieServiceServer) Read(_a0 context.Context, _a1 *v1.GetMovieRequest) (*v1.GetMovieResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *v1.GetMovieResponse
	if rf, ok := ret.Get(0).(func(context.Context, *v1.GetMovieRequest) *v1.GetMovieResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1.GetMovieResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *v1.GetMovieRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
